<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Incidents.WebUI</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Incidents.WebUI.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DataTables/datatables.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ContextMenu/jquery.contextMenu.min.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                @* <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Incidents</a> *@
                <a class="navbar-brand" role="button" onclick="goToIncidentsIndex()">Incidents</a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                    </ul>
                    @foreach (var role in ViewBag.Roles)
                    {
                        @if (role == "Administrator")
                        {
                            <div class="dropdown">
                                <a class="nav-link text-dark dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Administarte
                                </a>

                                <ul class="dropdown-menu">

                                    <li><a onclick="goToUserIndex()" class="nav-link text-dark dropdown-item" role="button" aria-disabled="true">Users</a></li>
                                </ul>
                            </div>
                        }
                    }

                    <div class="dropdown">
                        <button class="btn dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            @ViewBag.FullName
                        </button>
                        <ul class="dropdown-menu">
                            <li class="dropdown-item">@ViewBag.UserName</li>
                            <li>
                                <a asp-controller="Account" asp-action="LogOut" class="nav-link text-dark dropdown-item" role="button" aria-disabled="true">
                                    Log Out
                                </a>
                            </li>
                        </ul>
                    </div>




                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Incidents
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/DataTables/DataTables-1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript" src="~/ContextMenu/jquery.contextMenu.min.js"></script>
    <script type="text/javascript" src="~/ContextMenu/jquery.ui.position.js"></script>
    <script type="text/javascript" src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            goToIncidentsIndex();
            // selectOptions();
        });

        

        function goToIncidentsIndex() {
            $.ajax({
                url: "@Url.Action("Index", "Incident")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);

                    loadListIncidents();
                }
            })
        }

        function loadListIncidents() {
            $(".dataTables_length").addClass("bs-select");

            let table = $('#incidentTable').DataTable({
                processing: true,
                serverSide: true,
                scrollX: true,
                ajax: {
                    url: "@Url.Action("GetAllIncidents","Incident")",
                    type: "POST",
                    data: "json"
                },
                columns: [
                    { data: 'id', visible: false, filter: false },
                    { data: 'requestNr' },
                    { data: 'subsystem' },
                    { data: 'openDate' },
                    { data: 'closeDate' },
                    { data: 'type' },
                    { data: 'urgency' }
                ]
            });

            let userRoles = @Html.Raw(Json.Serialize(ViewBag.Roles));

            let isOperator = userRoles.includes("Operator");

            let contextMenuItems = {
                "details": { name: "Details" }
            };

            if (isOperator) {
                contextMenuItems["edit"] = { name: "Edit" };
                contextMenuItems["delete"] = { name: "Delete" };
            }
            
            let contextmenu = $('#incidentTable').contextMenu({
                selector: "tr",
                trigger: "right",
                callback: function (key, options) {
                    console.log(table);
                    console.log(table.rows());
                    let row = table.row(options.$trigger);
                    console.log(row.data());
                    switch (key) {
                        case "details":
                            goToIncidentDetailsPage(row.data()["id"]);
                            break;
                        case "edit":
                            goToIncidentEditPage(row.data()["id"]);
                            break;
                        case "delete":
                            deleteIncident(row.data()["id"]);
                            table.ajax.reload();
                        default:
                            break;
                    }
                },
                items: contextMenuItems
                // items: {
                //     "edit": { name: "Edit" },
                //     "details": { name: "Detais" },
                //     "delete": { name: "Delete" }
                // }
            })
        }

        function deleteIncident(incidentId) {
            $.ajax({
                url: "/Incident/DeleteIncident?IncidentId=" + incidentId,
                type: "POST",
                async: false,
                done: function (result) {
                    console.log(result);
                },
                error: function(error){
                    if (error.status === 403) {
                        alert("Error: Access dined");
                    }
                }
            });
        }

        function goToIncidentDetailsPage(incidentId) {
            $.ajax({
                url: "@Url.Action("IncidentDetails","Incident")",
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    incidentId: incidentId
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(response);
                }
            });
        }

        function goToIncidentCreate() {
            $.ajax({
                url: "@Url.Action("GetCreateIncident", "Incident")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    selectOptions();
                }
            })

            


        }

        function selectOptions() {
            $("#originSelect").change(function () {
                var selectedOriginId = $(this).val();
                if (selectedOriginId) {
                    $.ajax({
                        async: true,
                        url: '/Incident/GetAmbits',
                        type: 'POST',
                        dataType: 'json',
                        data: { originId: selectedOriginId },
                        success: function (data) {
                            $("#ambitSelect").empty().append(new Option());
                            $("#incidentTypeSelect").empty();

                            $.each(data, function (i, value) {
                                $('#ambitSelect').append(new Option(value.name, value.id));
                            });
                            $('#ambitSelect').prop('disabled', data.length === 0);
                            // if ($('#ambitSelect').prop('disabled', true)) { 
                                $('#incidentTypeSelect').prop('disabled', true);
                            // }
                        }
                    });
                } else {
                    $("#ambitSelect").empty();
                    $("#incidentTypeSelect").empty();
                    $('#ambitSelect').prop('disabled', true);
                    $('#incidentTypeSelect').prop('disabled', true);


                }
            });

            $("#ambitSelect").change(function () {
                var selectedAmbitId = $(this).val();
                if (selectedAmbitId) {
                    $.ajax({
                        url: '/Incident/GetIncidentTypes',
                        type: 'POST',
                        data: { ambitId: selectedAmbitId },
                        success: function (data) {
                            $("#incidentTypeSelect").empty().append(new Option());
                            $.each(data, function (i, value) {
                                $("#incidentTypeSelect").append(new Option(value.name, value.id));
                            });
                            $('#incidentTypeSelect').prop('disabled', data.length === 0);
                        }
                    });
                } else {
                    $("#incidentTypeSelect").empty();
                    $('#incidentTypeSelect').prop('disabled', true);

                }
            });
        }

        function createIncident() {
            var form = $("#createIncidentForm");
            // if (form.valid()) {
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    type: "POST",
                    success: function (response) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        // loadListIncidents();
                        goToIncidentsIndex();
                    },
                    error: function (error) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(error);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        goToIncidentCreate();

                        if (error.status === 400) {
                            console.log("Error: ", error.responseText);
                            alert("Error: " + error.responseText);
                        }
                        
                    }
                });
            // }
        }

        function goToIncidentEditPage(incidentId) {
            $.ajax({
                url: "@Url.Action("GetEditIncident","Incident")",
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    incidentId: incidentId
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    selectOptions();
                },
                error: function(error){
                    if (error.status === 403) {
                        alert("Error: Access dined");
                    }
                }
            });
        }

        function editIncident(incidentId) {
            var form = $("#editIncidentForm");

            if (form.valid()) {
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    success: function (response) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        goToIncidentsIndex();
                        // loadListIncidents();
                    },
                    error: function (error) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(error);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");

                        if (error.status === 400) {
                            console.log("Error: ", error.responseText);
                            alert("Error: " + error.responseText);
                            goToIncidentEditPage(incidentId);
                        }
                        
                    }
                })
            };
        }

        function goToIncidentImport() {
            $.ajax({
                url: "@Url.Action("GetImportCsv", "Incident")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                }
            })
        }

        function importCsvIncident(){
            var form = $("#importForm");
            if (form.valid()) {
            var url = form.attr('action');
                var formData = new FormData(form[0]);

            $.ajax({
                url: url,
                xhrFields: {
                    withCredentials: true
                },
                data: formData,
                processData: false,
                contentType: false,
                type: "POST",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                    // loadListIncidents();
                    goToIncidentsIndex();
                },
                error: function (error) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(error);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");

                    if (error.status === 400) {
                        console.log("Error: ", error.responseText);
                        alert("Error: " + error.responseText);
                    }
                    goToIncidentImport();

                }
            });
            }
        }


        function loadListUsers() {
            $(".dataTables_length").addClass("bs-select");

            let table = $('#userTable').DataTable({
                processing: true,
                serverSide: true,
                scrollX: true,
                ajax: {
                    url: "@Url.Action("GetAllUsers","User")",
                    type: "POST",
                    data: "json"
                },
                columns: [
                    { data: 'id', visible: false, filter: false },
                    { data: 'userName' },
                    { data: 'fullName' },
                    { data: 'email' },
                    { data: 'userRoles' },
                    { data: 'isEnabled' }
                ]
            });
            let contextmenu = $('#userTable').contextMenu({
                selector: "tr",
                trigger: "right",
                callback: function (key, options) {
                    console.log(table);
                    console.log(table.rows());
                    let row = table.row(options.$trigger);
                    console.log(row.data());
                    switch (key) {
                        case "details":
                            goToUserDetailsPage(row.data()["id"]);
                            break;
                        case "edit":
                            goToUserEditPage(row.data()["id"]);
                            break;
                        default:
                            break;
                    }
                },
                items: {
                    "edit": { name: "Edit" },
                    "details": { name: "Detais" }
                }
            })
        }


        function goToUserIndex() {
            $.ajax({
                url: "@Url.Action("Index", "User")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);

                    loadListUsers();
                }
            })
        }

        function goToLoginPage() {
            $.ajax({
                url: "@Url.Action("Login", "Account")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                }
            })
        }

        function goToUserCreate() {
            $.ajax({
                url: "@Url.Action("GetCreateUser", "User")",
                xhrFields: {
                    withCredentials: true
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(null);
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                }
            })
        };

        function createUser() {
            var form = $("#createUserForm");
            if (form.valid()) {
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    type: "POST",
                    success: function (response) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        goToUserIndex();
                    },
                    error: function (error) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(error);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");

                        goToUserCreate();
                        if (error.status === 400) {
                            console.log("Error: ", error.responseText);
                            alert("Error: " + error.responseText);
                        }
                    }
                });
            }
        }

        function updatePasswordSwitch() {
            var chbox = $("#updatePassword");
            var pas = $("#Password");
            var confPas = $("#ConfirmPassword");
            if (chbox.prop("checked")) {
                pas.prop("disabled", false);
                confPas.prop("disabled", false);
            }
            else {
                pas.prop("disabled", true);
                confPas.prop("disabled", true);
            }
        }

        function goToUserEditPage(userId) {
            $.ajax({
                url: "@Url.Action("GetEditUser","User")",
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    userId: userId
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(response);
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");
                }
            });
        }

        function goToUserDetailsPage(userId) {
            $.ajax({
                url: "@Url.Action("UserDetails","User")",
                xhrFields: {
                    withCredentials: true
                },
                data: {
                    userId: userId
                },
                method: "GET",
                success: function (response) {
                    $('#contentDiv').html(response);
                }
            });
        }

        function editUser(userId) {
            var form = $("#editUserForm");

            if (form.valid()) {
                var url = form.attr('action');

                $.ajax({
                    url: url,
                    xhrFields: {
                        withCredentials: true
                    },
                    data: form.serialize(),
                    method: "POST",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    success: function (response) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(response);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");
                        goToUserIndex();
                    },
                    error: function (error) {
                        $('#contentDiv').html(null);
                        $('#contentDiv').html(error);
                        $("form").removeData("validator");
                        $("form").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse("form");

                        goToUserEditPage(userId);
                        if (error.status === 400) {
                            console.log("Error: ", error.responseText);
                            alert("Error: " + error.responseText);
                        }
                    }
                })
            };
        }

    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
